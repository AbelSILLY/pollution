# Hérault

```{python}
#| echo: false
import pandas as pd
import sys
sys.path.append('../..')
import modpollution
df_a = modpollution.as_df_csv("../../modpollution/data/data_a.csv",True)
df_a = modpollution.extraire_donnees_depart(df_a,'HERAULT')
df_moy = modpollution.mean_by_dep(df_a)
modpollution.plotpoll(df_moy)
```

```{python}
#| echo: false
import requests
import pandas as pd
import plotly.express as px
from datetime import datetime
from collections import defaultdict

# URL de l'API GeoJSON pour l'Hérault
url = "https://services9.arcgis.com/7Sr9Ek9c1QTKmbwr/arcgis/rest/services/mesures_occitanie_annuelle_poll_princ/FeatureServer/0/query?outFields=*&where=nom_dept='HERAULT'&f=geojson"

# Récupérer les données GeoJSON depuis l'API
response = requests.get(url)
data = response.json()

# Extraire les données pertinentes pour l'Hérault
features = data['features']
herault_data = [feature['properties'] for feature in features]

# Préparer les données pour le tracé
pollutants_per_year = defaultdict(list)

for entry in herault_data:
    pollutant = entry['nom_poll']
    concentration = entry['valeur']
    date_debut_timestamp = entry['date_debut']
    year = datetime.utcfromtimestamp(date_debut_timestamp / 1000).year

    pollutants_per_year[pollutant].append((year, concentration))

# Transformer les données pour le tracé (calculer la concentration moyenne par année)
for pollutant, data in pollutants_per_year.items():
    data.sort(key=lambda x: x[0])

    # Calculer les concentrations moyennes par année
    averages_per_year = defaultdict(float)
    counts_per_year = defaultdict(int)

    for year, concentration in data:
        if concentration is not None:
            averages_per_year[year] += concentration
            counts_per_year[year] += 1

    for year in averages_per_year:
        if counts_per_year[year] > 0:
            averages_per_year[year] /= counts_per_year[year]

    pollutants_per_year[pollutant] = list(averages_per_year.items())

# Créer un DataFrame pour Plotly Express
df = pd.DataFrame([(pollutant, year, concentration) for pollutant, data in pollutants_per_year.items() for year, concentration in data],
                  columns=['Pollutant', 'Year', 'Concentration'])

# Tracé avec Plotly Express
fig = px.line(df, x='Year', y='Concentration', color='Pollutant', markers=True, line_group='Pollutant',
              labels={'Concentration': 'Concentration', 'Year': 'Année'},
              title='Concentration des polluants dans l\'Hérault par année',
              template='plotly', height=600)

# Personnaliser le tracé pour ressembler à Matplotlib
fig.update_traces(
    line=dict(width=1),  # Épaisseur de la ligne
    marker=dict(size=8)   # Taille des marqueurs
)

# Ajouter un curseur pour filtrer les données par année
fig.update_layout(
    xaxis=dict(
        rangeslider=dict(
            visible=True
        ),
        type='linear'  # Assurez-vous que le type d'axe x est 'linear' pour que le curseur fonctionne
    )
)

# Afficher le tracé interactif
fig.show()


```
## O3

```{python}
#| echo: false
import pandas as pd
import sys
sys.path.append('../..')
import modpollution

##### Pollution sur 5 ans #####
df_a = modpollution.as_df_csv("../../modpollution/data/data_a.csv",True)
df_a = modpollution.extraire_donnees_depart(df_a,'HERAULT')
df_a = modpollution.extraire_polluant(df_a,'O3')
modpollution.plotpollline(df_a,color='nom_station',titre='Concentration en O3 par stations sur 5 ans')

##### Pollution sur 1 an #####
df_m = modpollution.as_df_csv("../../modpollution/data/data_m.csv",False)
df_m = modpollution.extraire_donnees_depart(df_m,'HERAULT')
df_m = modpollution.extraire_polluant(df_m,'O3')
modpollution.plotpollline(df_m,color='nom_station',titre='Concentration en O3 par stations sur 1 an')

##### Pollution sur 1 mois #####
df_j = modpollution.as_df_csv("../../modpollution/data/data_30j.csv",False)
df_j = modpollution.extraire_donnees_depart(df_j,'HERAULT')
df_j = modpollution.extraire_polluant(df_j,'O3')
modpollution.plotpollline(df_j,color='nom_station',titre='Concentration en O3 par stations le mois dernier')

```


## PM10

```{python}
#| echo: false
import pandas as pd
import sys
sys.path.append('../..')
import modpollution

##### Pollution sur 5 ans #####
df_a = modpollution.as_df_csv("../../modpollution/data/data_a.csv",True)
df_a = modpollution.extraire_donnees_depart(df_a,'HERAULT')
df_a = modpollution.extraire_polluant(df_a,'PM10')
modpollution.plotpollline(df_a,color='nom_station',titre='Concentration en PM10 par stations sur 5 ans')

##### Pollution sur 1 an #####
df_m = modpollution.as_df_csv("../../modpollution/data/data_m.csv",False)
df_m = modpollution.extraire_donnees_depart(df_m,'HERAULT')
df_m = modpollution.extraire_polluant(df_m,'PM10')
modpollution.plotpollline(df_m,color='nom_station',titre='Concentration en PM10 par stations sur 1 an')

##### Pollution sur 1 mois #####
df_j = modpollution.as_df_csv("../../modpollution/data/data_30j.csv",False)
df_j = modpollution.extraire_donnees_depart(df_j,'HERAULT')
df_j = modpollution.extraire_polluant(df_j,'PM10')
modpollution.plotpollline(df_j,color='nom_station',titre='Concentration en PM10 par stations le mois dernier')

```

## PM2.5

```{python}
#| echo: false
import pandas as pd
import sys
sys.path.append('../..')
import modpollution

##### Pollution sur 5 ans #####
df_a = modpollution.as_df_csv("../../modpollution/data/data_a.csv",True)
df_a = modpollution.extraire_donnees_depart(df_a,'HERAULT')
df_a = modpollution.extraire_polluant(df_a,'PM2.5')
modpollution.plotpollline(df_a,color='nom_station',titre='Concentration en PM2.5 par stations sur 5 ans')

##### Pollution sur 1 an #####
df_m = modpollution.as_df_csv("../../modpollution/data/data_m.csv",False)
df_m = modpollution.extraire_donnees_depart(df_m,'HERAULT')
df_m = modpollution.extraire_polluant(df_m,'PM2.5')
modpollution.plotpollline(df_m,color='nom_station',titre='Concentration en PM2.5 par stations sur 1 an')

##### Pollution sur 1 mois #####
df_j = modpollution.as_df_csv("../../modpollution/data/data_30j.csv",False)
df_j = modpollution.extraire_donnees_depart(df_j,'HERAULT')
df_j = modpollution.extraire_polluant(df_j,'PM2.5')
modpollution.plotpollline(df_j,color='nom_station',titre='Concentration en PM2.5 par stations le mois dernier')

```

## NOX

```{python}
#| echo: false
import pandas as pd
import sys
sys.path.append('../..')
import modpollution

##### Pollution sur 5 ans #####
df_a = modpollution.as_df_csv("../../modpollution/data/data_a.csv",True)
df_a = modpollution.extraire_donnees_depart(df_a,'HERAULT')
df_a = modpollution.extraire_polluant(df_a,'NOX')
modpollution.plotpollline(df_a,color='nom_station',titre='Concentration en NOX par stations sur 5 ans')

##### Pollution sur 1 an #####
df_m = modpollution.as_df_csv("../../modpollution/data/data_m.csv",False)
df_m = modpollution.extraire_donnees_depart(df_m,'HERAULT')
df_m = modpollution.extraire_polluant(df_m,'NOX')
modpollution.plotpollline(df_m,color='nom_station',titre='Concentration en NOX par stations sur 1 an')

##### Pollution sur 1 mois #####
df_j = modpollution.as_df_csv("../../modpollution/data/data_30j.csv",False)
df_j = modpollution.extraire_donnees_depart(df_j,'HERAULT')
df_j = modpollution.extraire_polluant(df_j,'NOX')
modpollution.plotpollline(df_j,color='nom_station',titre='Concentration en NOX par stations le mois dernier')

```